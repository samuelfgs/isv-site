// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: ugFFj82Q2N1H3o8TBWt2M5
// Component: PXPe8ME1DQ

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { DataProvider } from "@plasmicpkgs/plasmic-basic-components"; // plasmic-import: D4RbnlpRXg3/codeComponent

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_copy_of_plasmic_kit_q_4_color_tokens_css from "../imported_dep_5/plasmic_imported_dep_5.module.css"; // plasmic-import: ugrBbUdM5cVqy9hjKxE3Z9/projectcss
import plasmic_antd_5_hostless_2_css from "../imported_dep_2/plasmic_imported_dep_2.module.css"; // plasmic-import: tRwRXcaJGaij9RuE9jQowa/projectcss
import plasmic_antd_5_hostless_css from "../imported_dep_8/plasmic_imported_dep_8.module.css"; // plasmic-import: kEs6HGEd6eEHXTXYJv3dXn/projectcss
import plasmic_plasmic_kit_q_4_color_tokens_css from "../imported_dep_4/plasmic_imported_dep_4.module.css"; // plasmic-import: 4Vuf7Faviq4HnBF9hV4YyE/projectcss
import projectcss from "./plasmic_a_d_3.module.css"; // plasmic-import: ugFFj82Q2N1H3o8TBWt2M5/projectcss
import sty from "../a_d_5/PlasmicPalestrantesData.module.css"; // plasmic-import: PXPe8ME1DQ/css

createPlasmicElementProxy;

export type PlasmicPalestrantesData__VariantMembers = {};
export type PlasmicPalestrantesData__VariantsArgs = {};
type VariantPropType = keyof PlasmicPalestrantesData__VariantsArgs;
export const PlasmicPalestrantesData__VariantProps =
  new Array<VariantPropType>();

export type PlasmicPalestrantesData__ArgsType = {
  children?: React.ReactNode;
};
type ArgPropType = keyof PlasmicPalestrantesData__ArgsType;
export const PlasmicPalestrantesData__ArgProps = new Array<ArgPropType>(
  "children"
);

export type PlasmicPalestrantesData__OverridesType = {
  root?: p.Flex<"div">;
  dataProvider?: p.Flex<typeof DataProvider>;
};

export interface DefaultPalestrantesDataProps {
  children?: React.ReactNode;
  className?: string;
}

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicPalestrantesData__RenderFunc(props: {
  variants: PlasmicPalestrantesData__VariantsArgs;
  args: PlasmicPalestrantesData__ArgsType;
  overrides: PlasmicPalestrantesData__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_copy_of_plasmic_kit_q_4_color_tokens_css.plasmic_tokens,
        plasmic_antd_5_hostless_2_css.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_plasmic_kit_q_4_color_tokens_css.plasmic_tokens,
        sty.root
      )}
    >
      <DataProvider
        data-plasmic-name={"dataProvider"}
        data-plasmic-override={overrides.dataProvider}
        className={classNames("__wab_instance", sty.dataProvider)}
        data={(() => {
          try {
            return [
              {
                name: "Adhemar de Campos",
                longDesc: `Autor de, aproximadamente, mil canções, o pastor Adhemar de Campos, que caminha com Cristo há 45 anos, é um dos mais notórios ministros de louvor e adoração do Brasil, tendo dedicado sua vida a compor músicas, que ajudam muitos a experimentarem a presença de Deus de um modo profundo. Em 1985, gravou seu primeiro LP. Já em 1987, em uma ação pioneira, realizou a primeira gravação ao vivo de músicas cristãs. Sua história confunde-se com a da música gospel no Brasil, tanto que, na década de 1980, era um dos poucos produtores de cânticos cristãos com grande projeção.

Seu ministério influenciou gerações, com composições atemporais, que, até hoje, nos tocam, oferecendo valores de uma vida cristã verdadeira.
`,
                shortDesc: `Autor de, aproximadamente, mil canções, o pastor Adhemar de Campos é um dos mais notórios ministros de louvor e adoração do Brasil, dedicando sua vida a compor canções que ajudam muitos a experimentarem a presença de Deus de um modo profundo.`
              },
              {
                name: "Asaph Borba",
                longDesc: `Asaph Borba é um músico e ministro de adoração brasileiro, que, por muitos anos, tem ministrado por todo o Brasil e em outros países, inclusive no mundo árabe. Ele atua em encontros de louvor e em igrejas das mais diferentes denominações, gravando os cânticos que lhe foram dados por Deus e que se tornaram parte da hinologia cristã nacional. Entre os louvor de sua autoria mais conhecidos, estão Jesus em Tua Presença, Minh’alma Engrandece, Alto Preço, O meu Louvor é Fruto, Infinitamente Mais, Nós Somos o Povo a quem Deus Libertou, Superabundante Graça, Jesus, Deus é Amor, A Cada Manhã, Deus é Fiel, Rastros de Amor, Eu Escolhi Jesus, O Centro de Todas as Coisas, Profetiza e muitos outros.

Jornalista por formação, também lançou diversos livros, entre os quais estão De um Pai para seus Filhos e História Por Trás da Música.

Asaph também é um dos pais da Igreja em São Vicente e faz parte da nossa história desde a sua fundação.
`,
                shortDesc: `Músico e ministro de adoração, há décadas trabalha para edificar, por meio de canções e livros, tanto a Igreja no Brasil quanto ao redor do planeta, inclusive no mundo árabe. É um dos pais da Igreja em São Vicente, fazendo parte de nossa história desde a fundação.`
              },
              {
                name: "Daniel Souza",
                longDesc: `Ministro de louvor, que criou a conhecida série Frutos do Espírito, tem servido à Igreja desde o início dos anos 1990. Juntamente com a sua esposa, Selma, deu início à Igreja em São Vicente, sendo discipulado por Jan Gottfridsson e Asaph Borba.

Entre suas canções mais conhecidas, estão Corpo e Família, que integra a Harpa Cristã, e Declaramos, que já foi cantada por diversos outros intérpretes. Ele também criou a série Discípulos e Eterna Aliança.

Daniel Souza também escreveu livros. Um deles é o Princípios absolutos para a vida do cristão.
`,
                shortDesc: `Ministro de louvor, que criou a conhecida série Frutos do Espírito, tem servido à Igreja desde o início dos anos 1990. Juntamente com a sua esposa, Selma, deu início à Igreja em São Vicente, sendo discipulado por Jan Gottfridsson e Asaph Borba.`
              },
              {
                name: "Jan Gottfridson",
                longDesc: `Jan, como é chamado pelas pessoas mais próximas, é um dos pastores da Igreja em Porto Alegre (RS) e um dos pais da Igreja em São Vicente. Natural da Suécia, está no Brasil desde a infância, levando o Evangelho do Reino a todas as regiões do país. Filho de missionários, tem três filhos, que se chamam Daniel, Jonathan e Michael, todos envolvidos no serviço do santos

Ele também é autor de livros, entre outros, sobre lideranças. Algumas de suas obras são Cinco Mãos e Liderança Espiritual.
`,
                shortDesc:
                  "Jan, como é chamado pelas pessoas mais próximas, é um dos pastores da Igreja em Porto Alegre (RS) e um dos pais da Igreja em São Vicente. Natural da Suécia, está no Brasil desde a infância, levando o Evangelho do Reino a todas as regiões do país."
              },
              {
                name: "Morada",
                longDesc: `Um dos principais ministérios de adoração do Brasil na atualidade, a banda Morada, que é liderada pelo ministro Bruno Morada, o Brunão, está há mais de 10 anos na estrada, servindo e amando a Igreja. Algumas de suas músicas são: “Só Tu és Santo” e “É Tudo Sobre Você”.

Este ministério tem alcançado cada vez mais um público diversificado, desde crianças até aos mais velhos, proporcionando, assim, momentos intensos e alegres entre as famílias. Isso se deve, em parte, à diversidade musical que a banda possui.
`,
                shortDesc: `Um dos principais ministérios de adoração do Brasil na atualidade, a banda Morada, que é liderada pelo ministro Bruno Morada, o Brunão, está há mais de 10 anos na estrada, servindo e amando a Igreja. Algumas de suas músicas são: "Só Tu és Santo e É Tudo Sobre Você".`
              }
            ];
          } catch (e) {
            if (
              e instanceof TypeError ||
              e?.plasmicType === "PlasmicUndefinedDataError"
            ) {
              return [
                {
                  name: "Fill Murray",
                  birthYear: 1950,
                  profilePicture: ["https://www.fillmurray.com/200/300"]
                },
                {
                  name: "Place Cage",
                  birthYear: 1950,
                  profilePicture: ["https://www.placecage.com/200/300"]
                }
              ];
            }
            throw e;
          }
        })()}
        name={"palestrantes"}
      >
        <ph.DataCtxReader>
          {$ctx =>
            p.renderPlasmicSlot({
              defaultContents: null,
              value: args.children
            })
          }
        </ph.DataCtxReader>
      </DataProvider>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "dataProvider"],
  dataProvider: ["dataProvider"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  dataProvider: typeof DataProvider;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicPalestrantesData__OverridesType,
  DescendantsType<T>
>;

type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicPalestrantesData__VariantsArgs;
    args?: PlasmicPalestrantesData__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicPalestrantesData__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicPalestrantesData__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicPalestrantesData__ArgProps,
          internalVariantPropNames: PlasmicPalestrantesData__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicPalestrantesData__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPalestrantesData";
  } else {
    func.displayName = `PlasmicPalestrantesData.${nodeName}`;
  }
  return func;
}

export const PlasmicPalestrantesData = Object.assign(
  // Top-level PlasmicPalestrantesData renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    dataProvider: makeNodeComponent("dataProvider"),

    // Metadata about props expected for PlasmicPalestrantesData
    internalVariantProps: PlasmicPalestrantesData__VariantProps,
    internalArgProps: PlasmicPalestrantesData__ArgProps
  }
);

export default PlasmicPalestrantesData;
/* prettier-ignore-end */
