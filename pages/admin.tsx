// This is a skeleton starter React page generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from "react";
import * as ph from "@plasmicapp/react-web/lib/host";
import GlobalContextsProvider from "../components/plasmic/a_d_3/PlasmicGlobalContextsProvider";
import { ScreenVariantProvider } from "../components/plasmic/a_d_3/PlasmicGlobalVariant__Screen";
import { PlasmicAdmin } from "../components/plasmic/a_d_3/PlasmicAdmin";
import { useRouter } from "next/router";
import ptBr from 'antd/locale/pt_BR';
import { ConfigProvider } from "antd";

function Admin() {
  // Use PlasmicAdmin to render this component as it was
  // designed in Plasmic, by activating the appropriate variants,
  // attaching the appropriate event handlers, etc.  You
  // can also install whatever React hooks you need here to manage state or
  // fetch data.
  //
  // Props you can pass into PlasmicAdmin are:
  // 1. Variants you want to activate,
  // 2. Contents for slots you want to fill,
  // 3. Overrides for any named node in the component to attach behavior and data,
  // 4. Props to set on the root node.
  //
  // By default, PlasmicAdmin is wrapped by your project's global
  // variant context providers. These wrappers may be moved to
  // Next.js Custom App component
  // (https://nextjs.org/docs/advanced-features/custom-app).
  const [show, setShow] = React.useState(false);
  React.useEffect(() => {
    setShow(true);
  }, []);
  return (
    <GlobalContextsProvider>
      <ConfigProvider locale={ptBr}>
      <ph.PageParamsProvider
        params={useRouter()?.query}
        query={useRouter()?.query}
      >
        {show && 
          <PlasmicAdmin 
            password={process.env.ADMIN_PASSWORD}
          />
        }
      </ph.PageParamsProvider>
      </ConfigProvider>
    </GlobalContextsProvider>
  );
}

export default Admin;
