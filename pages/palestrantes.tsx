// This is a skeleton starter React page generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from "react";
import * as ph from "@plasmicapp/react-web/lib/host";
import GlobalContextsProvider from "../components/plasmic/a_d_2/PlasmicGlobalContextsProvider";
import { ScreenVariantProvider } from "../components/plasmic/a_d_2/PlasmicGlobalVariant__Screen";
import { PlasmicPalestrantes } from "../components/plasmic/a_d_2/PlasmicPalestrantes";
import { useRouter } from "next/router";

import "slick-carousel/slick/slick-theme.css"
import "slick-carousel/slick/slick.css"

function Palestrantes() {
  // Use PlasmicPalestrantes to render this component as it was
  // designed in Plasmic, by activating the appropriate variants,
  // attaching the appropriate event handlers, etc.  You
  // can also install whatever React hooks you need here to manage state or
  // fetch data.
  //
  // Props you can pass into PlasmicPalestrantes are:
  // 1. Variants you want to activate,
  // 2. Contents for slots you want to fill,
  // 3. Overrides for any named node in the component to attach behavior and data,
  // 4. Props to set on the root node.
  //
  // By default, PlasmicPalestrantes is wrapped by your project's global
  // variant context providers. These wrappers may be moved to
  // Next.js Custom App component
  // (https://nextjs.org/docs/advanced-features/custom-app).
  const ref = React.useRef();
  const [activeSlide, setActiveSlide] = React.useState(0);
  return (
    <GlobalContextsProvider>
      <ph.PageParamsProvider
        params={useRouter()?.query}
        query={useRouter()?.query}
      >
      <PlasmicPalestrantes 
        onDotClick={(slide) => {
          (ref.current as any).slickGoTo(slide);
        }}
        slider={{
          render: (props: any, C: any) => <C {...props} ref={ref}  afterChange={(index: number) => setActiveSlide(index)}/>
        }}
        activeSlide={activeSlide}
      />
      </ph.PageParamsProvider>
    </GlobalContextsProvider>
  );
}

export default Palestrantes;
